type Answer {
  correct: Boolean!
  displayValue: String!
}

type Character {
  detValues: [Determinative!]
  id: ID!
  logValues: [Logograph!]
  syllValues: [String!]
  unicode: String!
  variants: [CharacterVariant!]
}

type CharacterVariant {
  category: SignVariantCategory!
  diagonalAsc: Int!
  diagonalDesc: Int!
  fontSet: FontSet!
  glossenkeil: Int!
  horizontal: Int!
  id: ID!
  vertical: Int!
}

type CompVariant {
  category: SignVariantCategory!
  character: Character!
}

type CompVariantData {
  identicalVariants: [CompVariant!]!
  similarVariants: DifferenceOneVariants!
}

input CompVariantsInput {
  diagonalAsc: Int!
  diagonalDesc: Int!
  glossenkeil: Int!
  horizontal: Int!
  vertical: Int!
}

type Determinative {
  detTranslation: String!
  detTransliteration: String!
  id: ID!
}

type DifferenceOneVariants {
  diagonalAscMinus: [CompVariant!]!
  diagonalAscPlus: [CompVariant!]!
  diagonalDescMinus: [CompVariant!]!
  diagonalDescPlus: [CompVariant!]!
  glossenkeilMinus: [CompVariant!]!
  glossenkeilPlus: [CompVariant!]!
  horizontalMinus: [CompVariant!]!
  horizontalPlus: [CompVariant!]!
  verticalMinus: [CompVariant!]!
  verticalPlus: [CompVariant!]!
}

type Exercise {
  answers: [Answer!]!
  character: Character!
  correct: Boolean!
  questionType: Question!
}

enum FontSet {
  ULLIKUMMI_A
  ULLIKUMMI_B
  ULLIKUMMI_C
}

input GameSettingsInput {
  cunToTranslit: Boolean!
  inclDet: Boolean!
  inclLog: Boolean!
  inclSyll: Boolean!
  numberOfExercises: Int!
  selectedIds: [String!]!
  translitToCun: Boolean!
}

type Logograph {
  id: ID!
  logTranslation: String!
  logTransliteration: String!
}

type Mutation {
  createUser(email: String!, firstName: String!, lastName: String!): User
  deleteUser(id: ID!): User
}

type Query {
  allChars: [Character!]!
  char(id: ID!): Character
  compVariants(input: CompVariantsInput!): CompVariantData!
  exercises(input: GameSettingsInput!): [Exercise!]!
  user(id: ID!): User
  users: [User!]!
}

enum Question {
  CUN_TO_TRANS_DET
  CUN_TO_TRANS_LOG
  CUN_TO_TRANS_SYLL
  TRANS_TO_CUN_DET
  TRANS_TO_CUN_LOG
  TRANS_TO_CUN_SYLL
}

enum SignVariantCategory {
  DEFAULT
  EARLY
  LATE
  MIDDLE
}

type User {
  firstName: String!
  id: ID!
  lastName: String!
}
