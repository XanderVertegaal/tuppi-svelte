type Character {
  detValues: [Determinative!]
  id: ID!
  logValues: [Logograph!]
  syllValues: [String!]
  unicode: String!
  variants: [CharacterVariant!]
}

type CharacterVariant {
  category: SignVariantCategory!
  diagonalAsc: Int!
  diagonalDesc: Int!
  fontSet: FontSet!
  glossenkeil: Int!
  horizontal: Int!
  id: ID!
  vertical: Int!
}

type Determinative {
  detTranslation: String!
  detTransliteration: String!
  id: ID!
}

enum FontSet {
  ULLIKUMMI_A
  ULLIKUMMI_C
  ULLKUMMI_B
}

type Logograph {
  id: ID!
  logTranslation: String!
  logTransliteration: String!
}

type Mutation {
  createUser(email: String!, firstName: String!, lastName: String!): User
  deleteUser(id: ID!): User
}

type Query {
  allChars: [Character!]!
  char(id: ID!): Character
  user(id: ID!): User
  users: [User!]!
}

enum SignVariantCategory {
  DEFAULT
  EARLY
  LATE
  MIDDLE
}

type User {
  firstName: String!
  id: ID!
  lastName: String!
}
